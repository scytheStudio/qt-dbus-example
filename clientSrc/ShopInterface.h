/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ../common/Shop.xml -i ../common/datasets/Product.h -p ShopInterface
 *
 * qdbusxml2cpp is Copyright (C) 2023 The Qt Company Ltd and other contributors.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SHOPINTERFACE_H
#define SHOPINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "../common/datasets/Product.h"

/*
 * Proxy class for interface com.scythestudio.dbus.shop
 */
class ComScythestudioDbusShopInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.scythestudio.dbus.shop"; }

public:
    ComScythestudioDbusShopInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComScythestudioDbusShopInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> addProduct(Product product)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(product);
        return asyncCallWithArgumentList(QStringLiteral("addProduct"), argumentList);
    }

    inline QDBusPendingReply<QList<Product> > getProducts()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("getProducts"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void productAdded(Product in0);
};

namespace com {
  namespace scythestudio {
    namespace dbus {
      using shop = ::ComScythestudioDbusShopInterface;
    }
  }
}
#endif
